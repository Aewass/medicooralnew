---
import { Image } from 'astro:assets';
import LanguageSwitcher from './LanguageSwitcher.astro';
import toothIcon from '../assets/tooth.svg';
import { translations } from '../i18n/translations';

const currentLang = Astro.url.pathname.split('/')[1] || 'bs';
const t = translations[currentLang].nav;

const links = [
  { href: `/${currentLang}#services`, label: t.services },
  { href: `/${currentLang}#about`, label: t.about },
  { href: `/${currentLang}#history`, label: t.history },
  { href: `/${currentLang}#team`, label: t.team },
  { href: `/${currentLang}#contact`, label: t.contact },
];
---

<header class="fixed top-0 left-0 w-full z-40 bg-white/80 backdrop-blur-lg shadow-sm">
  <nav class="w-full max-w-7xl mx-auto px-5 h-20 flex items-center justify-between">
    <!-- Logo -->
    <a 
      href={`/${currentLang}`} 
      class="flex items-center gap-2 group"
      id="logoLink"
    >
      <div class="w-10 h-10 relative">
        <Image 
          src={toothIcon} 
          alt="MedicoOral-AS Logo" 
          width={40} 
          height={40}
          class="w-full h-full object-contain transition-transform duration-300 group-hover:scale-110"
        />
      </div>
      <span class="text-xl font-primary font-bold text-primary">
        MedicoOral-AS
      </span>
    </a>

    <!-- Desktop Navigation -->
    <div class="hidden md:flex items-center gap-1">
      {links.map(link => (
        <a
          href={link.href}
          class="px-4 py-2 text-text-secondary hover:text-primary transition-colors duration-300"
        >
          {link.label}
        </a>
      ))}
    </div>

    <!-- Language Switcher -->
    <div class="hidden md:block">
      <LanguageSwitcher />
    </div>

    <!-- Mobile Menu Button -->
    <button
      id="menuButton"
      class="md:hidden p-2 text-text-secondary hover:text-primary transition-colors duration-300"
      aria-label="Toggle menu"
    >
      <svg 
        xmlns="http://www.w3.org/2000/svg" 
        class="h-6 w-6" 
        fill="none" 
        viewBox="0 0 24 24" 
        stroke="currentColor"
      >
        <path 
          stroke-linecap="round" 
          stroke-linejoin="round" 
          stroke-width="2" 
          d="M4 6h16M4 12h16M4 18h16"
        />
      </svg>
    </button>
  </nav>

  <!-- Mobile Menu -->
  <div 
    id="mobileMenu" 
    class="fixed top-0 right-0 w-full h-full z-50 bg-white transform translate-x-full transition-transform duration-300 md:hidden"
    style="min-height: 100vh;"
  >
    <div class="h-20 px-5 flex items-center justify-end border-b">
      <button
        id="closeButton"
        class="p-2 text-text-secondary hover:text-primary transition-colors duration-300"
        aria-label="Close menu"
      >
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          class="h-6 w-6" 
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="2" 
            d="M6 18L18 6M6 6l12 12"
          />
        </svg>
      </button>
    </div>
    <div class="px-5 py-8 flex flex-col items-center gap-6 bg-white">
      {links.map(link => (
        <a
          href={link.href}
          class="text-lg font-medium text-text-secondary hover:text-primary transition-colors duration-300"
        >
          {link.label}
        </a>
      ))}
      <div class="mt-4">
        <LanguageSwitcher />
      </div>
    </div>
  </div>
</header>

<script>
  const menuButton = document.getElementById('menuButton');
  const closeButton = document.getElementById('closeButton');
  const mobileMenu = document.getElementById('mobileMenu');
  const mobileLinks = mobileMenu?.querySelectorAll('a');

  const toggleMenu = () => {
    mobileMenu?.classList.toggle('translate-x-full');
    document.body.classList.toggle('overflow-hidden');
  };

  menuButton?.addEventListener('click', toggleMenu);
  closeButton?.addEventListener('click', toggleMenu);
  
  // Close menu when clicking a link
  mobileLinks?.forEach(link => {
    link.addEventListener('click', toggleMenu);
  });

  // Updated scroll to top functionality
  const logoLink = document.getElementById('logoLink');
  
  logoLink?.addEventListener('click', (e) => {
    e.preventDefault();
    const currentPath = window.location.pathname;
    const targetPath = logoLink.getAttribute('href');
    
    // Smooth scroll to top
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });

    // Remove hash and update URL without page reload
    const cleanPath = targetPath?.split('#')[0] || '/';
    if (currentPath !== cleanPath) {
      window.history.pushState({}, '', cleanPath);
    } else {
      // If on same path, just remove the hash
      window.history.pushState({}, '', cleanPath);
    }
  });
</script> 