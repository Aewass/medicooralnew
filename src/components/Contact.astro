---
import { Send } from 'lucide-astro';
import { translations } from '../i18n/translations';
// Force static prerendering to help Netlify detect the form
export const prerender = true;
const currentLang = Astro.url.pathname.split('/')[1] || 'bs';
const t = translations[currentLang].contact;
---

<section class="w-full py-20" id="contact">
  <div class="w-full max-w-7xl mx-auto px-5">
    <div class="text-center mb-16 space-y-4">
      <span class="text-secondary text-sm font-medium tracking-wider uppercase">
        {t.subtitle}
      </span>
      <h2 class="text-4xl md:text-5xl font-primary font-bold text-primary">
        {t.title}
      </h2>
      <div class="w-20 h-1.5 bg-secondary rounded-full mx-auto"></div>
    </div>

    <div class="max-w-2xl mx-auto">
      <div class="relative group overflow-hidden">
        <div class="relative bg-white">
          <!-- This form will not be submitted directly, but used as a UI -->
          <form 
            id="contact-form-ui"
            class="contact-form-ui"
            name="contact-form-ui" 
            method="POST" 
            action="/success/"
            onsubmit="return false;"
          >
            <div class="space-y-4">
              <input
                type="text"
                name="name"
                id="contact-name"
                placeholder={t.form.name || "Vaše ime"}
                required
                class="w-full px-6 py-4 rounded-xl border-2 border-text-primary/10 focus:border-secondary outline-none transition-all duration-300 bg-transparent"
              />
              <input
                type="email"
                name="email"
                id="contact-email"
                placeholder={t.form.email || "Vaš email"}
                required
                class="w-full px-6 py-4 rounded-xl border-2 border-text-primary/10 focus:border-secondary outline-none transition-all duration-300 bg-transparent"
              />
            </div>
            <textarea
              name="message"
              id="contact-message"
              placeholder={t.form.message || "Vaša poruka"}
              required
              rows="4"
              class="w-full my-4 px-6 py-4 rounded-xl border-2 border-text-primary/10 focus:border-secondary outline-none transition-all duration-300 bg-transparent resize-none"
            ></textarea>

            <button
              type="submit"
              id="contact-submit"
              class="bg-secondary text-white px-8 py-3 rounded-full font-medium inline-flex items-center gap-2 transition-all hover:gap-3"
            >
              {t.form.submit || "Pošalji poruku"}
              <Send class="w-5 h-5" />
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // This script will handle form submission by populating the static contact-form.html
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('contact-form-ui');
    const submitButton = document.getElementById('contact-submit');

    if (form && submitButton) {
      submitButton.addEventListener('click', async (e) => {
        e.preventDefault();
        
        // Validate the form
        const nameField = document.getElementById('contact-name') as HTMLInputElement;
        const emailField = document.getElementById('contact-email') as HTMLInputElement;
        const messageField = document.getElementById('contact-message') as HTMLTextAreaElement;
        
        if (!nameField?.value || !emailField?.value || !messageField?.value) {
          return; // Form validation will handle this
        }
        
        // Create data to submit
        const formData = new URLSearchParams();
        formData.append('form-name', 'contact-form');
        formData.append('name', nameField.value);
        formData.append('email', emailField.value);
        formData.append('message', messageField.value);
        
        try {
          // Submit the form data to the static contact form endpoint
          const response = await fetch('/contact-form', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded'
            },
            body: formData.toString()
          });
          
          // Redirect to success page
          window.location.href = '/success/';
        } catch (error) {
          console.error('Error submitting form:', error);
          // You could add error handling UI here
        }
      });
    }
  });
</script>