---
import { fade } from 'astro:transitions';

interface Props {
  title: string;
  description?: string;
  isArticle?: boolean;
}

const { 
  title, 
  description = "MedicoOral-AS - Leading dental clinic in Bosnia and Herzegovina specializing in dental implants, oral surgery, and comprehensive dental care.",
  isArticle = false
} = Astro.props;

const currentLang = Astro.url.pathname.startsWith('/en') ? 'en' : 'bs';

// Get canonical URL
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const alternateURLbs = new URL(Astro.url.pathname.replace('/en', ''), Astro.site);
const alternateURLen = new URL('/en' + (Astro.url.pathname === '/' ? '' : Astro.url.pathname), Astro.site);


---

<!doctype html>
<html lang={currentLang} class="scroll-smooth overflow-x-hidden">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    
    <!-- Favicons -->
    <link rel="icon" type="image/svg+xml" href="/tooth.svg" />
    <link rel="icon" type="image/png" sizes="32x32" href="/tooth-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/tooth-16x16.png" />
    <link rel="apple-touch-icon" sizes="180x180" href="/tooth-180x180.png" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico">
    
    <!-- Preload fonts -->
    <link 
      rel="preconnect" 
      href="https://fonts.googleapis.com"
      crossorigin
    />
    <link 
      rel="preconnect" 
      href="https://fonts.gstatic.com" 
      crossorigin
    />
    <link 
      href="https://fonts.googleapis.com/css2?family=Plus+Jakarta+Sans:wght@400;500;600;700&family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    
    <!-- Primary Meta Tags -->
    <title>{title} | MedicoOral</title>
    <meta name="title" content={`${title} | MedicoOral`} />
    <meta name="description" content={description} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={isArticle ? 'article' : 'website'} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={`${title} | MedicoOral`} />
    <meta property="og:description" content={description} />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={`${title} | MedicoOral`} />
    <meta property="twitter:description" content={description} />
    
    <!-- Canonical and Alternate Languages -->
    <link rel="canonical" href={canonicalURL} />
    <link rel="alternate" hreflang="bs" href={alternateURLbs} />
    <link rel="alternate" hreflang="en" href={alternateURLen} />
    <link rel="alternate" hreflang="x-default" href={alternateURLbs} />
    
    <!-- Add page transitions -->
    <meta name="view-transition" content="same-origin" />
  </head>
  <body class="overflow-x-hidden">
    <div class="fixed top-0 left-0 w-full h-1 bg-gradient-to-r from-secondary to-primary origin-left transform scale-x-0 transition-transform duration-300 z-50" id="scroll-progress"></div>
    
    <div transition:animate={fade({ duration: '0.4s' })}>
      <slot />
    </div>

    <script>
      document.addEventListener('scroll', () => {
        const scrollProgress = document.getElementById('scroll-progress');
        const scrollPct = (window.scrollY / (document.documentElement.scrollHeight - window.innerHeight)) * 100;
        scrollProgress.style.transform = `scaleX(${scrollPct / 100})`;
      });
    </script>

    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const hash = window.location.hash;
        if (hash) {
          const target = document.querySelector(hash);
          if (target) {
            target.scrollIntoView({ behavior: 'smooth' });
          }
        }
      });
    </script>
  </body>
</html>

<style is:global>
  /* Add any global styles here */
  section {
    @apply relative w-full;
  }

  /* Fix for background color overflow */
  section::before {
    content: '';
    @apply absolute inset-0 w-screen -z-10;
  }

  /* Apply background colors to specific sections */
  section[data-bg="secondary"]::before {
    @apply bg-[#1199ee];
  }

  section[data-bg="card"]::before {
    @apply bg-[#e8f7ff];
  }

  /* Add after your existing styles */
  section[data-pattern="grid"] {
    position: relative;
  }

  section[data-pattern="grid"]::after {
    content: "";
    position: absolute;
    inset: 0;
    background-image: 
      linear-gradient(to right, #1199ee10 1px, transparent 1px),
      linear-gradient(to bottom, #1199ee10 1px, transparent 1px);
    background-size: 24px 24px;
    pointer-events: none;
  }

  section[data-pattern="dots"] {
    position: relative;
  }

  section[data-pattern="dots"]::after {
    content: "";
    position: absolute;
    inset: 0;
    background-image: radial-gradient(#1199ee10 1px, transparent 1px);
    background-size: 24px 24px;
    pointer-events: none;
  }

  .floating {
    animation: floating 3s ease-in-out infinite;
  }

  @keyframes floating {
    0% { transform: translate(0, 0); }
    50% { transform: translate(0, 10px); }
    100% { transform: translate(0, 0); }
  }

  .fade-in-section {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
  }

  .fade-in-section.is-visible {
    opacity: 1;
    transform: translateY(0);
  }

  .cta-button {
    position: relative;
    overflow: hidden;
  }

  .cta-button::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 120%;
    height: 120%;
    background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, transparent 70%);
    transform: translate(-50%, -50%) scale(0);
    transition: transform 0.5s;
  }

  .cta-button:hover::after {
    transform: translate(-50%, -50%) scale(1);
  }



  .testimonial-carousel {
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
  }

  .testimonial-card {
    scroll-snap-align: center;
    transform-style: preserve-3d;
    backface-visibility: hidden;
  }
</style> 